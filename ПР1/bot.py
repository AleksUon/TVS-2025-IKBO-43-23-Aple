import logging
import re
import random  # intentionally buggy: –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è "—Ä–∞–Ω–¥–æ–º–Ω—ã—Ö" –±–∞–≥–æ–≤
from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    ContextTypes,
)

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger(__name__)

# –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
MAIN_MENU, DEPARTMENTS = range(2)

TEXTS = {
    "who_we_are": """
–ù–ê–®–ê –ú–ò–°–°–ò–Ø
–ú–∏—Å—Å–∏—è –¢–≤–æ—Ä—á–µ—Å–∫–æ-–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è - –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Ç–≤–æ—Ä—á–µ—Å–∫–æ–π –º–æ–ª–æ–¥–µ–∂–∏ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–≤–æ–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –≤ –∏–≤–µ–Ω—Ç-–∏–Ω–¥—É—Å—Ç—Ä–∏–∏.

–ù–ê–®–ò –¶–ï–õ–ò
–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–∞–º—ã–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∏–¥–µ–∏, –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å –∫—Ä—É—Ç—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ–± –∞—Ä—Ç–∏—Å—Ç–∞—Ö –Ω–∞—à–µ–≥–æ –¶–µ–Ω—Ç—Ä–∞ –ö—É–ª—å—Ç—É—Ä—ã –∏ –¢–≤–æ—Ä—á–µ—Å—Ç–≤–∞, –∞ —Ç–∞–∫ –∂–µ –≤–º–µ—Å—Ç–µ –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –≤ –í–£–ó–∞—Ö.""",
    "commandments": """
**–ó–ê–ü–û–í–ï–î–ò**

‚úî –ò–ù–ò–¶–ò–ê–¢–ò–í–ê _–Ω–µ_ –Ω–∞–∫–∞–∑—É–µ–º–∞, –µ—Å–ª–∏ **—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∞**  
  –ö–∞—Å–∞–µ—Ç—Å—è –≤—Å–µ–≥–æ: –∏–¥–µ–π, –ø—Ä–æ–±–ª–µ–º, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π –∏ —á–∞—Ç–æ–≤.

‚úî –ü–†–ê–í–ò–õ–ê –°–¶–ï–ù–´ –∫–∞—Å–∞—é—Ç—Å—è –≤—Å–µ—Ö: `—á–µ—Ä–Ω—ã–π –¥—Ä–µ—Å—Å-–∫–æ–¥`, `—Å–º–µ–Ω–∫–∞`, `—Ç–∏—à–∏–Ω–∞ –∫—É–ª–∏—Å`  
  –ü–æ–¥—Ä–æ–±–Ω–µ–µ —Å–º. [–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é](https://example.com/guide) –∏ **–Ω–µ** –Ω–∞—Ä—É—à–∞–π —Ä–µ–≥–ª–∞–º–µ–Ω—Ç.

‚úî –ë—É–¥—å –∞–∫—Ç–∏–≤–Ω—ã–º, –Ω–æ _–Ω–µ_ –¥–µ–ª–∞–π –∑–∞ –¥—Ä—É–≥–æ–≥–æ –µ–≥–æ —Ä–∞–±–æ—Ç—É

‚úî –í—Å–µ–≥–¥–∞ —Ç—Ä–µ–∑–≤–æ –æ—Ü–µ–Ω–∏–≤–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é –∏ **—Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ**  
  –û—Ç–≤–µ—Ç—å —Å–µ–±–µ: _–∑–Ω–∞—é –ª–∏ —è, –∫–∞–∫ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É?_ –ú–æ–≥—É –ª–∏ —Ä–µ—à–∏—Ç—å —ç—Ç–æ —Å–∞–º? –ö—Ç–æ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å?

‚úî –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–∞–∂–Ω–µ–µ —à–æ—É: `–∫–∞–±–µ–ª–∏`, `–º–∏–∫—Ä–æ—Ñ–æ–Ω—ã`, `—Å—Ü–µ–Ω–∞` ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–≤–∞–∂–¥—ã
""",
    "departments": "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –æ—Ç–¥–µ–ª:",
    "department_details": {
        "–ö—Ä–µ–∞—Ç–∏–≤": """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–º –æ—Ç–¥–µ–ª–µ:
–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: –ñ–∞–≤–æ—Ä–æ–Ω–∫–æ–≤–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞
–ó–∞–¥–∞—á–∏: –ü—Ä–∏–¥—É–º—ã–≤–∞–µ–º –∫–æ–Ω—Ü–µ–ø—Ç—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, —Å—Ü–µ–Ω–∞—Ä–Ω–æ–µ –¥–µ–ª–æ, —Ä–µ–∂–∏—Å—Å—É—Ä–∞, –ø—Ä–æ–¥—é—Å–∏—Ä–æ–≤–∞–Ω–∏–µ.
–ö–æ–Ω—Ç–∞–∫—Ç—ã —Ç–≥: @aleksuon
–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–¥–µ–ª–∞: 
–°–∞—Ñ–∞—Ä–æ–≤ –ê—Ä—Ç—É—Ä @Ar7ur4ik
–ú—É—Ö–∞–º–∞–¥–∏–µ–≤ –¢–∏–º—É—Ä @broyreally
–ú–∏–ª—å–∫–æ–≤ –ë–æ—Ä–∏—Å–ª–∞–≤ @cwedyx
""",
        "–î–æ–∫—É–º–µ–Ω—Ç—ã": """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–¥–µ–ª–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:
–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: –ì—É—Ä—å—è—à–∫–∏–Ω–∞ –ê–Ω–∞—Å—Ç–∞—Å–∏—è
–ó–∞–¥–∞—á–∏: –ü—Ä–æ—Ö–æ–¥ –≥–æ—Å—Ç–µ–π –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ, —Å–±–æ—Ä –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏, –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ—Ç –∑–∞–Ω—è—Ç–∏–π, –æ—Ç—á—ë—Ç—ã –æ –¢–û–ü–µ –∏ –µ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
–ö–æ–Ω—Ç–∞–∫—Ç—ã: @ayanastosia_pineappleovna
–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–¥–µ–ª–∞: 
–ê—Å—Ç–∞–ø–µ–Ω–∫–æ –î–µ–Ω–∏—Å @dsns_me
–ï–≥–æ—Ä–æ–≤–∞ –ê–Ω–∞—Å—Ç–∞—Å–∏—è @zhirobublik
–†–æ—Ö–ª–æ–≤–∞ –ú–∞—Ä–∏—è @mashu171
""",
    },
    "dictionary": """–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å:
–ü—Ä–æ—Å–ø–µ–∫—Ç –í–µ—Ä–Ω–∞–¥—Å–∫–æ–≥–æ, 86 
- –¢–•–¢, 86, –ë–ö–ó - –∫–æ—Ä–ø—É—Å –Ω–∞ –ø—Ä. –í–µ—Ä–Ω–∞–¥—Å–∫–æ–≥–æ 86
- –ë–ö–ó - –ë–æ–ª—å—à–æ–π –ö–æ–Ω—Ü–µ—Ä—Ç–Ω—ã–π –∑–∞–ª
- –ê—Ç—Ä–∏—É–º, –∫–æ–ª–æ–¥–µ—Ü - –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –¥–≤–æ—Ä –¢–•–¢
- –•–æ–ª–ª –¶–ö–¢ - —Å–ª–µ–≤–∞ (—Ç–∞–º —Å—Ç–æ–∏—Ç —Ñ–æ—Ä—Ç–µ–ø–∏–∞–Ω–æ, –∑–µ—Ä–∫–∞–ª–æ, –º–∞–ª–µ–Ω—å–∫–∞—è —Å—Ü–µ–Ω–∞)
- –•–æ–ª–ª –≥–ª–∞–≤–Ω—ã–π - —Å–ø—Ä–∞–≤–∞
- –ì—Ä–∏–º—ë—Ä–∫–∞ —Å–ª–µ–≤–∞ - –≥—Ä–∏–º—ë—Ä–∫–∞ —Ö–æ–ª–ª —Ü–∫—Ç
- –ì—Ä–∏–º—ë—Ä–∫–∞ —Å–ø—Ä–∞–≤–∞ - –≥–ª–∞–≤–Ω–∞—è
- –ó–≤—É–∫–∞—á–∫–∞, —Ä—É–±–∫–∞, —Å–∫–ª–∞–¥ - –ø–æ–º–µ—â–µ–Ω–∏–µ –∑–∞ –∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º –∑–∞–ª–æ–º –ë–ö–ó. –í—Ö–æ–¥ —á–µ—Ä–µ–∑ –ª–µ—Å—Ç–Ω–∏—Ü—É —É –∑–µ—Ä–∫–∞–ª–∞ –≤ —Ö–æ–ª–ª–µ –¶–ö–¢
- –ê–¥–º–∏–Ω–∫–∞ - –∫–∞–±–∏–Ω–µ—Ç –î–∏–∞–Ω—ã –∏ –ö–∞—Ç–∏. –ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ö–æ–ª–ª–µ –¶–ö–¢ —Å–ø—Ä–∞–≤–∞ –æ—Ç –≤—Ö–æ–¥–∞.
- –†–µ–ø–µ—Ç–∏—Ü–∏–æ–Ω–∫–∞ - —Ç–∞–º –∂–µ –≥–¥–µ –∏ –∞–¥–º–∏–Ω–∫–∞. –ñ–µ–ª–µ–∑–Ω–∞—è –¥–≤–µ—Ä—å.
- –°—Ç–∞–Ω–∫–∏ - —Å—Ç—É–ø–µ–Ω–∏ - —Ö–æ—Ä–æ–≤—ã–µ —Å—Ç–∞–Ω–∫–∏
- –ó–∞–Ω–∞–≤–µ—Å - —à—Ç–æ—Ä—ã
- –õ–µ–≤–∞—è –∫—É–ª–∏—Å–∞ - —Å —Ç–µ—Ö–Ω–∏–∫–æ–π
- –ü—Ä–∞–≤–∞—è –∫—É–ª–∏—Å–∞ - —Å —Ä–æ—è–ª–µ–º
- –ó–∞–¥–Ω–∏–∫ - –∫—É–ª–∏—Å–∞ –∑–∞ —ç–∫—Ä–∞–Ω–æ–º
- –†–æ—è–ª—å - –±–æ–ª—å—à–æ–µ —á—ë—Ä–Ω–æ–µ —Ñ-–Ω–æ
- –ü–∏–∞–Ω–∏–Ω–æ - —ç–ª-–µ –±–µ–ª–æ–µ
- –û–≤–µ—Ä—Ö–µ–¥—ã - –º–∞–ª–µ–Ω—å–∫–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω—ã –Ω–∞ —Å—Ç–æ–π–∫–∞—Ö –¥–ª—è —Ö–æ—Ä–∞

–ü—Ä–æ—Å–ø–µ–∫—Ç –í–µ—Ä–Ω–∞–¥—Å–∫–æ–≥–æ, 78
- 78 - –∫–æ—Ä–ø—É—Å –Ω–∞ –ø—Ä. –í–µ—Ä–Ω–∞–¥—Å–∫–æ–≥–æ 78
- –ú–ö–ó - –ú–∞–ª—ã–π –ö–æ–Ω—Ü–µ—Ä—Ç–Ω—ã–π –∑–∞–ª. –ü–æ–¥–Ω—è—Ç—å—Å—è –ø–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ª–µ—Å—Ç–Ω–∏—Ü–µ. –ü–æ–≤–µ—Ä–Ω—É—Ç—å –Ω–∞–ø—Ä–∞–≤–æ.
- –ó–≤—É–∫–∞—á–∫–∞ - –í —Å–∞–º–æ–º –ú–ö–ó —Å–ª–µ–≤–∞ –µ—Å—Ç—å –ª–µ—Å—Ç–Ω–∏—Ü–∞ —Å –¥–≤–µ—Ä—å—é.
- –¢–í - –¢–∞—Ç—å—è–Ω–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞ –ú–∞–∫—É—à–µ–≤–∞ (–¥–∏—Ä–µ–∫—Ç–æ—Ä –¶–ö–¢)
- –ê319 - –ö–∞–±–∏–Ω–µ—Ç –¢–í
- –¢–∞–Ω—Ü –∑–∞–ª - –ú–∞–ª—ã–π —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω—ã–π –∑–∞–ª. –°–ø—Ä–∞–≤–∞ –æ—Ç –ú–ö–ó –ø–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ –≤–≤–µ—Ä—Ö.

–û–±—â–µ–µ
- –ü—Ä–∞–≤–æ –∏ –ª–µ–≤–æ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –∑—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–ª–∞ –ù–ê —Å—Ü–µ–Ω—É 
- –¢–µ—Ö–Ω–∏—á–∫–∞ - —Ç–µ—Ö –≥—Ä—É–ø–ø–∞ - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –≥—Ä—É–ø–ø–∞
- –ë—ç–∫–ª–∞–π–Ω - —Ä–µ–±—è—Ç–∞ –∑–∞ –∫—É–ª–∏—Å–∞–º–∏ –∏–∑ —Ç–µ—Ö–Ω–∏—á–∫–∏ (–æ—Ç–≤–µ—á–∞—é—Ç –∑–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω—ã –∏ –∏—Ö –ø–æ–¥–∫–ª—é—á–∫—É)
- –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±—É–∫–≤ –ø–æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞–º:
—É - –ò–¢–£
—Ä - –ò–†–ò
—Ö - –ò–¢–•–¢
–∏ - –ò–ò–¢
–± - –ò–ö–ë
–∫ - –ò–ò–ò
—Ç/—ç - –ò–ü–¢–ò–ü
—â - –ö–ü–ö
""",
}


def _build_shuffled_main_keyboard(include_restart=True) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é, –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω–∞—è –∫–∞–∂–¥—ã–π —Ä–∞–∑. # intentionally buggy"""
    buttons = ["–ö—Ç–æ –º—ã", "–ó–∞–ø–æ–≤–µ–¥–∏", "–û—Ç–¥–µ–ª—ã", "–°–ª–æ–≤–∞—Ä–∏–∫"]  # intentionally buggy: ¬´–°–ª–æ–≤–∞—Ä–∏–∫¬ª –≤–º–µ—Å—Ç–æ ¬´–°–ª–æ–≤–∞—Ä—å¬ª
    random.shuffle(buttons)  # intentionally buggy
    rows = [buttons[i: i + 2] for i in range(0, len(buttons), 2)]
    if include_restart:
        rows.append(["–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å"])
    return ReplyKeyboardMarkup(rows, one_time_keyboard=True, resize_keyboard=True)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–µ–∑ –∫–Ω–æ–ø–æ–∫. –í—Å–µ–≥–¥–∞ —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è (—Ç–æ–ª—å–∫–æ –¥–ª—è /start)."""
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ. –ö–∞–∫ –º–æ–∂–Ω–æ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?",
        reply_markup=ReplyKeyboardRemove(),
    )
    context.user_data["awaiting_name"] = True
    return MAIN_MENU


async def main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    text = update.message.text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –∏ ¬´–ø—É—Ç–∞–µ–º¬ª –µ–≥–æ (–±–∞–≥ —Å –∏–º–µ–Ω–µ–º)
    if context.user_data.get("awaiting_name"):
        context.user_data["awaiting_name"] = False
        real_name = text.strip()
        context.user_data["name_real"] = real_name

        wrong_pool = ["–ê–Ω–¥—Ä–µ–π", "–ú–∞—Ä–∏–Ω–∞", "–°–µ—Ä–≥–µ–π", "–ü–æ–ª–∏–Ω–∞", "–í–ª–∞–¥", "–ö–∞—Ç—è"]
        candidates = [n for n in wrong_pool if n.lower() != real_name.lower()]
        wrong = random.choice(candidates or wrong_pool)
        context.user_data["wrong_name"] = wrong

        await update.message.reply_text(
            f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {wrong}! üòâ",
            reply_markup=_build_shuffled_main_keyboard(),
        )
        return MAIN_MENU

    if text == "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å":
        return await restart_handler(update, context)

    if text == "–ö—Ç–æ –º—ã":
        await update.message.reply_text(TEXTS["who_we_are"], parse_mode="Markdown")
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:",
            reply_markup=_build_shuffled_main_keyboard(),
        )
        return MAIN_MENU

    elif text == "–ó–∞–ø–æ–≤–µ–¥–∏":
        raw = TEXTS["commandments"]
        if random.random() < 0.5:  # intentionally buggy: –∏–Ω–æ–≥–¥–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é ¬´–ø–ª–æ—Å–∫–∏–π¬ª —Ç–µ–∫—Å—Ç
            plain = re.sub(r"[*_`]", "", raw)
            await update.message.reply_text(
                plain, reply_markup=_build_shuffled_main_keyboard()
            )
        else:
            await update.message.reply_text(
                raw,
                reply_markup=_build_shuffled_main_keyboard(),
                parse_mode="Markdown",
            )
        return MAIN_MENU

    elif text == "–û—Ç–¥–µ–ª—ã":
        departments_keyboard = [
            ["–ö—Ä–µ–∞—Ç–∏–≤", "–î–æ–∫—É–º–µ–Ω—Ç—ã"],
            ["–ù–∞–∑–∞–¥"],
            ["–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å"],  # –∫–Ω–æ–ø–∫–∞-—Å–ø–∞—Å–∞—Ç–µ–ª—å
        ]
        await update.message.reply_text(
            f"*{TEXTS['departments']}*",
            reply_markup=ReplyKeyboardMarkup(
                departments_keyboard, resize_keyboard=True, one_time_keyboard=True
            ),
            parse_mode="Markdown",
        )
        return DEPARTMENTS

    elif text == "–°–ª–æ–≤–∞—Ä—å":  # intentionally buggy: ¬´–°–ª–æ–≤–∞—Ä–∏–∫¬ª –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º
        await update.message.reply_text(
            TEXTS["dictionary"],
            reply_markup=_build_shuffled_main_keyboard(),
            parse_mode="Markdown",
        )
        return MAIN_MENU

    else:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.",
            reply_markup=_build_shuffled_main_keyboard(),
        )
        return MAIN_MENU


async def department_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–Ω—é –æ—Ç–¥–µ–ª–æ–≤."""
    text = update.message.text
    if text == "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å":
        return await restart_handler(update, context)

    departments_keyboard = [
        ["–ö—Ä–µ–∞—Ç–∏–≤", "–î–æ–∫—É–º–µ–Ω—Ç—ã"],
        ["–ù–∞–∑–∞–¥"],
        ["–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å"],
    ]

    if text == "–ù–∞–∑–∞–¥":
        # intentionally buggy: ¬´–∑–∞–ª–∏–ø–∞—é—â–∏–π¬ª –≤–æ–∑–≤—Ä–∞—Ç ‚Äî –æ—Å—Ç–∞—ë–º—Å—è –≤ —ç—Ç–æ–º –∂–µ –º–µ–Ω—é
        await update.message.reply_text(
            "–í—ã —É–∂–µ –≤ –º–µ–Ω—é –æ—Ç–¥–µ–ª–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–ª–∏ ¬´–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å¬ª.",
            reply_markup=ReplyKeyboardMarkup(
                departments_keyboard, resize_keyboard=True, one_time_keyboard=True
            ),
        )
        return DEPARTMENTS

    elif text in TEXTS["department_details"]:
        await update.message.reply_text(
            TEXTS["department_details"][text],
            reply_markup=ReplyKeyboardMarkup(
                departments_keyboard, resize_keyboard=True, one_time_keyboard=True
            ),
        )
        return DEPARTMENTS
    else:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª –∏–∑ —Å–ø–∏—Å–∫–∞.",
            reply_markup=ReplyKeyboardMarkup(
                departments_keyboard, resize_keyboard=True, one_time_keyboard=True
            ),
        )
        return DEPARTMENTS


async def restart_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–¢–∏—Ö–∏–π —Ä–µ—Å—Ç–∞—Ä—Ç: –ø–æ–∫–∞–∑–∞—Ç—å –ø–∞–Ω–µ–ª—å –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é, –±–µ–∑ –≤–æ–ø—Ä–æ—Å–∞ –æ–± –∏–º–µ–Ω–∏."""
    await update.message.reply_text(
        "–ì–æ—Ç–æ–≤–æ. –ü–∞–Ω–µ–ª—å —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–Ω–∞:",
        reply_markup=_build_shuffled_main_keyboard(),
    )
    return MAIN_MENU


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞! –ï—Å–ª–∏ —É –≤–∞—Å –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã, —è –≤—Å–µ–≥–¥–∞ –∑–¥–µ—Å—å!\n"
        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start",
        reply_markup=ReplyKeyboardRemove(),
    )
    return ConversationHandler.END


def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    application = Application.builder().token("8470863701:AAEsjtZZgVvZh42kp5abkKp2KObmJyg5whg").build()

    conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("start", start),
            CommandHandler("restart", restart_handler),
        ],
        states={
            MAIN_MENU: [
                MessageHandler(filters.Regex(r"^–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å$"), restart_handler),
                MessageHandler(filters.TEXT & ~filters.COMMAND, main_menu),
            ],
            DEPARTMENTS: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, department_menu)
            ],
        },
        fallbacks=[
            CommandHandler("cancel", cancel),
            CommandHandler("restart", restart_handler),
        ],
        allow_reentry=True,
    )

    application.add_handler(conv_handler)
    application.run_polling()


if __name__ == "__main__":
    main()
